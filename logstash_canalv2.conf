###############################################################################
#                                   INPUT
###############################################################################
input {
	file{
        path => ["/var/log/oma-canalv2/oma-canalv2-app.log"]
        start_position => "beginning"
        sincedb_path => "/dev/null"
    }
   #  beats {
   #  	port => 5044
  	# }

   #  stdin{}
}

###############################################################################
#                                   OUTPUT
###############################################################################
output {
	if [log_level] != "DEBUG" {
		stdout {
			codec => rubydebug {
                # metadata => true
            }
		} 

		#elasticsearch plugin
		elasticsearch {
			hosts => "10.193.199.171"
			index => "logstash-canalv2-%{country}"
			user => "admin_logstash"
			password => "admin_logstash"
		}
	}
} 



###############################################################################
#                                   FILTERS
###############################################################################
#Parse
filter {
	grok {
		#date logLevel      sessionId usecase  step classname message={} context={} extra={}
		match => ["message", "%{TIMESTAMP_ISO8601:log_date}%{SPACE}%{LOGLEVEL:log_level}%{SPACE}%{NOTSPACE:session_id}%{SPACE}%{NOTSPACE:usecase}%{SPACE}(UC%{NUMBER:uc_step}%{SPACE})?%{NOTSPACE:classname}%{SPACE}message=%{GREEDYDATA:[@metadata][msg]}context=%{GREEDYDATA:[@metadata][context]}extra=%{GREEDYDATA:[@metadata][extra]}"]
	}

	#set log_date as timestamp 
    date {
        match => ["log_date","ISO8601"]
    }
}

#JSON PARSING
filter {
	if [log_level] != "DEBUG" {
		#parse message
		if[@metadata][msg] != " "{
			json {
			    source => "[@metadata][msg]"
			}
		}

		#parse context
		if [@metadata][context] != " "{
			json {

			    source => "[@metadata][context]"
			}
		}

		#parse extra
		if[@metadata][extra] != " " {
			json {
			    source => "[@metadata][extra]"
			}
		}
	}
}



#Amount success
filter {
	if[log_type] == "Transaction" and [paymentStatus]=="OK" { #(['addonCode'] == "CAN300" or ['addonCode'] == "CAN400" or ['addonCode'] == "CAN440"){
		 mutate {add_field => ["amount_success","%{amount}"]}
	}
}



filter  {

	if [log_type] == "INCOMING BROKER RESPONSE" and [status][broker_response] {
		mutate {
			rename => { "status" => "status_response" }
		}
	}

	mutate {
		rename => { "CANAL OPERATION" => "canalOperation" }
	}

	if[addonCode] {
		mutate {
			replace => {"addonDescription" => "%{addonCode}: %{addonDescription}"}
		}
	}

	if[log_type] == "Transaction" {
		mutate {
			rename => { "addonDescription" => "addonDescriptionTransaction" }
			rename => { "addonCode" => "addonCodeTransaction" }
		}
	}

	mutate {
		lowercase => [ "currency" ]
		lowercase => [ "country" ]
		lowercase => ["canalOperation"]
	}

	mutate {
        convert => { "amount_success" => "integer" }
    }

	mutate {
		remove_field => ["message","mainOffer","optionsList","duration","PIN CODE"]

	}
}


filter {
	###########################################################
	#            ELAPSED sur Canal_Account_List_Request
	###########################################################
	if [log_type]== "INCOMING USSD REQUEST" and [action_type] == "canalAccountList" {
	    #Start: envoi ussd
	    mutate  {
	        add_tag => ["taskStartedAL"]
	    }
	}
    #End: retour ussd
    else if  [log_type] == "OUTGOING USSD RESPONSE" and [action_type] == "canalAccountList" { 
        mutate  {
            add_tag => ["taskTerminatedAL"]
        }
    }

	elapsed {
	    start_tag => "taskStartedAL"
	    end_tag => "taskTerminatedAL"
	    unique_id_field => "session_id"
	    timeout => 100
	}
	mutate { rename => {"elapsed_time" => "elapsed_time_account_list"}}


	###########################################################
	#             ELAPSED sur Canal_Account_Check_Request
	###########################################################
	if [log_type]== "INCOMING USSD REQUEST" and [action_type] == "canalAccountCheck" {
	    #Start: envoi ussd
	    mutate  {
	        add_tag => ["taskStartedAC"]
	    }
	}

    #End: retour ussd
    else if  [log_type] == "OUTGOING USSD RESPONSE" and [action_type] == "canalAccountCheck" { 
        mutate  {
            add_tag => ["taskTerminatedAC"]
        }
    }

	elapsed {
	    start_tag => "taskStartedAC"
	    end_tag => "taskTerminatedAC"
	    unique_id_field => "session_id"
	    timeout => 100
	}
	mutate { rename => {"elapsed_time" => "elapsed_time_account_check"}}




	###########################################################
	#            ELAPSED sur Canal_Offer_Check_Request
	###########################################################
	if [log_type]== "INCOMING USSD REQUEST" and [action_type] == "canalOfferCheck" {
	    #Start: envoi ussd
	    mutate  {
	        add_tag => ["taskStartedOC"]
	    }
	}

    #End: retour ussd
    else if  [log_type] == "OUTGOING USSD RESPONSE" and [action_type] == "canalOfferCheck" { 
        mutate  {
            add_tag => ["taskTerminatedOC"]
        }
    }
	elapsed {
	    start_tag => "taskStartedOC"
	    end_tag => "taskTerminatedOC"
	    unique_id_field => "session_id"
	    timeout => 100
	}
	mutate { rename => {"elapsed_time" => "elapsed_time_offer_check"}}



	###########################################################
	#            ELAPSED sur Canal_Offer_Payment_Request
	###########################################################
	if [log_type]== "INCOMING USSD REQUEST" and [action_type] == "canalOfferPayment" {
	    #Start: envoi ussd
	    mutate  {
	        add_tag => ["taskStartedOP"]
	    }
	}

    #End: retour ussd
    else if  [log_type] == "OUTGOING USSD RESPONSE" and [action_type] == "canalOfferPayment" { 
        mutate  {
            add_tag => ["taskTerminatedOP"]
        }
    }

	elapsed {
	    start_tag => "taskStartedOP"
	    end_tag => "taskTerminatedOP"
	    unique_id_field => "session_id"
	    timeout => 100
	}
	mutate { rename => {"elapsed_time" => "elapsed_time_offer_payment"}}


	###########################################################
	#             ELAPSED sur requete canal
	###########################################################
	if [log_type]== "OUTGOING CANAL REQUEST" {
	    mutate  {
	        add_tag => ["taskStartedC"]
	    }
	}

    else if  [log_type] == "INCOMING CANAL RESPONSE"{ 
        mutate  {
            add_tag => ["taskTerminatedC"]
        }
    }

	elapsed {
	    start_tag => "taskStartedC"
	    end_tag => "taskTerminatedC"
	    unique_id_field => "session_id"
	    timeout => 100
	}
	mutate { rename => {"elapsed_time" => "elapsed_time_canal"}}


	###########################################################
	#                   ELAPSED sur BROKER
	###########################################################
	if [log_type]== "OUTGOING BROKER REQUEST" {
	    mutate  {
	        add_tag => ["taskStartedB"]
	    }
	}
    else if  [log_type] == "INCOMING BROKER RESPONSE"{ 
        mutate  {
            add_tag => ["taskTerminatedB"]
        }
    }

	elapsed {
	    start_tag => "taskStartedB"
	    end_tag => "taskTerminatedB"
	    unique_id_field => "session_id"
	    timeout => 100
	}
	mutate { rename => {"elapsed_time" => "elapsed_time_broker"}}


	###########################################################
	#                   ELAPSED sur SMSC
	###########################################################
	if [log_type]== "OUTGOING SMSC REQUEST" {
	    mutate  {
	        add_tag => ["taskStartedS"]
	    }
	}

    else if  [log_type] == "INCOMING SMSC RESPONSE"{ 
        mutate  {
            add_tag => ["taskTerminatedS"]
        }
    }

	elapsed {
	    start_tag => "taskStartedS"
	    end_tag => "taskTerminatedS"
	    unique_id_field => "session_id"
	    timeout => 100
	}
	mutate { rename => {"elapsed_time" => "elapsed_time_smsc"}}
}




