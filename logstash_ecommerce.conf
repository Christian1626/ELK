input {
    file {
    #path => "/var/log/log_ecommerce.log"
    path => "/home/christian/Documents/ELK/log_ecommerce.log"
    start_position => "beginning"
    sincedb_path => "/dev/null"
  }
  stdin{}
}

filter {
	grok {
		patterns_dir => "./patterns"
		match => [ "message", "%{LOGBACK_LOG}"]
	}

	#permet au timestamp d'avoir la meme date que celle des logs
	date {
		match => ["log_date","dd-MM-YYYY HH:mm:ss.SSS"]
	}

	kv {
		field_split => ","
		source => "msg"
	}
}

#ajoute
filter {
	if [classname] =~ /SellRequest$/ {
		mutate{ add_tag => "sell"}
	} else if[classname] =~ /SearchRequest$/ {
		mutate { add_tag => "search"}	
	}
}

filter {
	mutate {
		convert => { "id" => "integer" }
		convert => { "price" => "float" }
		remove_field => "message"
		split => [ "options", "|" ]
	}
}

#ajouter des informations de gÃ©olocalisation via une adresse ip
filter {
   geoip {
      source => "ip"

   }
}

output {
	stdout {
		codec => rubydebug
	} 

	elasticsearch {
    	hosts => "127.0.0.1"
		index => "logstash-ecommerce"
  	}


}