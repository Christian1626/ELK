{
  "{\"filename\":\"/home/christian/Documents/ELK/kibana-4.4.1-linux-x64/installedPlugins/shield/index.js\",\"extra\":{},\"env\":{},\"retainLines\":false,\"nonStandard\":true,\"experimental\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"stage\":2,\"blacklist\":[],\"optional\":[],\"modules\":\"common\",\"moduleIds\":false,\"jsxPragma\":\"React.createElement\",\"plugins\":[],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"keepModuleIdExtensions\":false,\"auxiliaryCommentAfter\":\"\",\"externalHelpers\":false,\"metadataUsedHelpers\":false,\"breakConfig\":false,\"sourceType\":\"module\"}:5.8.23": {
    "metadata": {
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      },
      "usedHelpers": []
    },
    "ignored": false,
    "code": "'use strict';\n\nvar hapiAuthCookie = require('hapi-auth-cookie');\nvar root = require('requirefrom')('');\n\nmodule.exports = function (kibana) {\n  return new kibana.Plugin({\n    name: 'shield',\n    require: ['elasticsearch'],\n\n    config: function config(Joi) {\n      return Joi.object({\n        enabled: Joi.boolean()['default'](true),\n        cookieName: Joi.string()['default']('sid'),\n        encryptionKey: Joi.string(),\n        sessionTimeout: Joi.number()['default'](30 * 60 * 1000)\n      })['default']();\n    },\n\n    uiExports: {\n      chromeNavControls: ['plugins/shield/views/logout_button'],\n      apps: [{\n        id: 'login',\n        title: 'Login',\n        main: 'plugins/shield/views/login',\n        hidden: true,\n        autoload: kibana.autoload.styles\n      }, {\n        id: 'logout',\n        title: 'Logout',\n        main: 'plugins/shield/views/logout',\n        hidden: true,\n        autoload: kibana.autoload.styles\n      }]\n    },\n\n    init: function init(server, options) {\n      var config = server.config();\n      if (config.get('shield.encryptionKey') == null) throw new Error('shield.encryptionKey is required in kibana.yml.');\n      if (config.get('server.ssl.key') == null || config.get('server.ssl.cert') == null) {\n        throw new Error('HTTPS is required. Please set server.ssl.key and server.ssl.cert in kibana.yml.');\n      }\n\n      server.register(hapiAuthCookie, function (error) {\n        if (error != null) throw error;\n\n        server.auth.strategy('session', 'cookie', 'required', {\n          cookie: config.get('shield.cookieName'),\n          password: config.get('shield.encryptionKey'),\n          ttl: config.get('shield.sessionTimeout'),\n          path: config.get('server.basePath') + '/',\n          clearInvalid: true,\n          keepAlive: true,\n          redirectTo: config.get('server.basePath') + '/login',\n          validateFunc: root('server/lib/validate')(server)\n        });\n      });\n\n      root('server/routes/api/v1/authenticate')(server);\n      root('server/routes/views/login')(server, this);\n      root('server/routes/views/logout')(server, this);\n    }\n  });\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2NocmlzdGlhbi9Eb2N1bWVudHMvRUxLL2tpYmFuYS00LjQuMS1saW51eC14NjQvaW5zdGFsbGVkUGx1Z2lucy9zaGllbGQvaW5kZXguanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSxJQUFNLGNBQWMsR0FBRyxPQUFPLENBQUMsa0JBQWtCLENBQUMsQ0FBQztBQUNuRCxJQUFNLElBQUksR0FBRyxPQUFPLENBQUMsYUFBYSxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUM7O0FBRXhDLE1BQU0sQ0FBQyxPQUFPLEdBQUcsVUFBQyxNQUFNO1NBQUssSUFBSSxNQUFNLENBQUMsTUFBTSxDQUFDO0FBQzdDLFFBQUksRUFBRSxRQUFRO0FBQ2QsV0FBTyxFQUFFLENBQUMsZUFBZSxDQUFDOztBQUUxQixVQUFNLEVBQUEsZ0JBQUMsR0FBRyxFQUFFO0FBQ1YsYUFBTyxHQUFHLENBQUMsTUFBTSxDQUFDO0FBQ2hCLGVBQU8sRUFBRSxHQUFHLENBQUMsT0FBTyxFQUFFLFdBQVEsQ0FBQyxJQUFJLENBQUM7QUFDcEMsa0JBQVUsRUFBRSxHQUFHLENBQUMsTUFBTSxFQUFFLFdBQVEsQ0FBQyxLQUFLLENBQUM7QUFDdkMscUJBQWEsRUFBRSxHQUFHLENBQUMsTUFBTSxFQUFFO0FBQzNCLHNCQUFjLEVBQUUsR0FBRyxDQUFDLE1BQU0sRUFBRSxXQUFRLENBQUMsRUFBRSxHQUFHLEVBQUUsR0FBRyxJQUFJLENBQUM7T0FDckQsQ0FBQyxXQUFRLEVBQUUsQ0FBQTtLQUNiOztBQUVELGFBQVMsRUFBRTtBQUNULHVCQUFpQixFQUFFLENBQUMsb0NBQW9DLENBQUM7QUFDekQsVUFBSSxFQUFFLENBQUM7QUFDTCxVQUFFLEVBQUUsT0FBTztBQUNYLGFBQUssRUFBRSxPQUFPO0FBQ2QsWUFBSSxFQUFFLDRCQUE0QjtBQUNsQyxjQUFNLEVBQUUsSUFBSTtBQUNaLGdCQUFRLEVBQUUsTUFBTSxDQUFDLFFBQVEsQ0FBQyxNQUFNO09BQ2pDLEVBQUU7QUFDRCxVQUFFLEVBQUUsUUFBUTtBQUNaLGFBQUssRUFBRSxRQUFRO0FBQ2YsWUFBSSxFQUFFLDZCQUE2QjtBQUNuQyxjQUFNLEVBQUUsSUFBSTtBQUNaLGdCQUFRLEVBQUUsTUFBTSxDQUFDLFFBQVEsQ0FBQyxNQUFNO09BQ2pDLENBQUM7S0FDSDs7QUFFRCxRQUFJLEVBQUEsY0FBQyxNQUFNLEVBQUUsT0FBTyxFQUFFO0FBQ3BCLFVBQU0sTUFBTSxHQUFHLE1BQU0sQ0FBQyxNQUFNLEVBQUUsQ0FBQztBQUMvQixVQUFJLE1BQU0sQ0FBQyxHQUFHLENBQUMsc0JBQXNCLENBQUMsSUFBSSxJQUFJLEVBQUUsTUFBTSxJQUFJLEtBQUssQ0FBQyxpREFBaUQsQ0FBQyxDQUFDO0FBQ25ILFVBQUksTUFBTSxDQUFDLEdBQUcsQ0FBQyxnQkFBZ0IsQ0FBQyxJQUFJLElBQUksSUFBSSxNQUFNLENBQUMsR0FBRyxDQUFDLGlCQUFpQixDQUFDLElBQUksSUFBSSxFQUFFO0FBQ2pGLGNBQU0sSUFBSSxLQUFLLENBQUMsaUZBQWlGLENBQUMsQ0FBQztPQUNwRzs7QUFFRCxZQUFNLENBQUMsUUFBUSxDQUFDLGNBQWMsRUFBRSxVQUFDLEtBQUssRUFBSztBQUN6QyxZQUFJLEtBQUssSUFBSSxJQUFJLEVBQUUsTUFBTSxLQUFLLENBQUM7O0FBRS9CLGNBQU0sQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLFNBQVMsRUFBRSxRQUFRLEVBQUUsVUFBVSxFQUFFO0FBQ3BELGdCQUFNLEVBQUUsTUFBTSxDQUFDLEdBQUcsQ0FBQyxtQkFBbUIsQ0FBQztBQUN2QyxrQkFBUSxFQUFFLE1BQU0sQ0FBQyxHQUFHLENBQUMsc0JBQXNCLENBQUM7QUFDNUMsYUFBRyxFQUFFLE1BQU0sQ0FBQyxHQUFHLENBQUMsdUJBQXVCLENBQUM7QUFDeEMsY0FBSSxFQUFFLE1BQU0sQ0FBQyxHQUFHLENBQUMsaUJBQWlCLENBQUMsR0FBRyxHQUFHO0FBQ3pDLHNCQUFZLEVBQUUsSUFBSTtBQUNsQixtQkFBUyxFQUFFLElBQUk7QUFDZixvQkFBVSxFQUFLLE1BQU0sQ0FBQyxHQUFHLENBQUMsaUJBQWlCLENBQUMsV0FBUTtBQUNwRCxzQkFBWSxFQUFFLElBQUksQ0FBQyxxQkFBcUIsQ0FBQyxDQUFDLE1BQU0sQ0FBQztTQUNsRCxDQUFDLENBQUM7T0FDSixDQUFDLENBQUM7O0FBRUgsVUFBSSxDQUFDLG1DQUFtQyxDQUFDLENBQUMsTUFBTSxDQUFDLENBQUM7QUFDbEQsVUFBSSxDQUFDLDJCQUEyQixDQUFDLENBQUMsTUFBTSxFQUFFLElBQUksQ0FBQyxDQUFDO0FBQ2hELFVBQUksQ0FBQyw0QkFBNEIsQ0FBQyxDQUFDLE1BQU0sRUFBRSxJQUFJLENBQUMsQ0FBQztLQUNsRDtHQUNGLENBQUM7Q0FBQSxDQUFDIiwiZmlsZSI6Ii9ob21lL2NocmlzdGlhbi9Eb2N1bWVudHMvRUxLL2tpYmFuYS00LjQuMS1saW51eC14NjQvaW5zdGFsbGVkUGx1Z2lucy9zaGllbGQvaW5kZXguanMiLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBoYXBpQXV0aENvb2tpZSA9IHJlcXVpcmUoJ2hhcGktYXV0aC1jb29raWUnKTtcbmNvbnN0IHJvb3QgPSByZXF1aXJlKCdyZXF1aXJlZnJvbScpKCcnKTtcblxubW9kdWxlLmV4cG9ydHMgPSAoa2liYW5hKSA9PiBuZXcga2liYW5hLlBsdWdpbih7XG4gIG5hbWU6ICdzaGllbGQnLFxuICByZXF1aXJlOiBbJ2VsYXN0aWNzZWFyY2gnXSxcblxuICBjb25maWcoSm9pKSB7XG4gICAgcmV0dXJuIEpvaS5vYmplY3Qoe1xuICAgICAgZW5hYmxlZDogSm9pLmJvb2xlYW4oKS5kZWZhdWx0KHRydWUpLFxuICAgICAgY29va2llTmFtZTogSm9pLnN0cmluZygpLmRlZmF1bHQoJ3NpZCcpLFxuICAgICAgZW5jcnlwdGlvbktleTogSm9pLnN0cmluZygpLFxuICAgICAgc2Vzc2lvblRpbWVvdXQ6IEpvaS5udW1iZXIoKS5kZWZhdWx0KDMwICogNjAgKiAxMDAwKVxuICAgIH0pLmRlZmF1bHQoKVxuICB9LFxuXG4gIHVpRXhwb3J0czoge1xuICAgIGNocm9tZU5hdkNvbnRyb2xzOiBbJ3BsdWdpbnMvc2hpZWxkL3ZpZXdzL2xvZ291dF9idXR0b24nXSxcbiAgICBhcHBzOiBbe1xuICAgICAgaWQ6ICdsb2dpbicsXG4gICAgICB0aXRsZTogJ0xvZ2luJyxcbiAgICAgIG1haW46ICdwbHVnaW5zL3NoaWVsZC92aWV3cy9sb2dpbicsXG4gICAgICBoaWRkZW46IHRydWUsXG4gICAgICBhdXRvbG9hZDoga2liYW5hLmF1dG9sb2FkLnN0eWxlc1xuICAgIH0sIHtcbiAgICAgIGlkOiAnbG9nb3V0JyxcbiAgICAgIHRpdGxlOiAnTG9nb3V0JyxcbiAgICAgIG1haW46ICdwbHVnaW5zL3NoaWVsZC92aWV3cy9sb2dvdXQnLFxuICAgICAgaGlkZGVuOiB0cnVlLFxuICAgICAgYXV0b2xvYWQ6IGtpYmFuYS5hdXRvbG9hZC5zdHlsZXNcbiAgICB9XVxuICB9LFxuXG4gIGluaXQoc2VydmVyLCBvcHRpb25zKSB7XG4gICAgY29uc3QgY29uZmlnID0gc2VydmVyLmNvbmZpZygpO1xuICAgIGlmIChjb25maWcuZ2V0KCdzaGllbGQuZW5jcnlwdGlvbktleScpID09IG51bGwpIHRocm93IG5ldyBFcnJvcignc2hpZWxkLmVuY3J5cHRpb25LZXkgaXMgcmVxdWlyZWQgaW4ga2liYW5hLnltbC4nKTtcbiAgICBpZiAoY29uZmlnLmdldCgnc2VydmVyLnNzbC5rZXknKSA9PSBudWxsIHx8IGNvbmZpZy5nZXQoJ3NlcnZlci5zc2wuY2VydCcpID09IG51bGwpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcignSFRUUFMgaXMgcmVxdWlyZWQuIFBsZWFzZSBzZXQgc2VydmVyLnNzbC5rZXkgYW5kIHNlcnZlci5zc2wuY2VydCBpbiBraWJhbmEueW1sLicpO1xuICAgIH1cblxuICAgIHNlcnZlci5yZWdpc3RlcihoYXBpQXV0aENvb2tpZSwgKGVycm9yKSA9PiB7XG4gICAgICBpZiAoZXJyb3IgIT0gbnVsbCkgdGhyb3cgZXJyb3I7XG5cbiAgICAgIHNlcnZlci5hdXRoLnN0cmF0ZWd5KCdzZXNzaW9uJywgJ2Nvb2tpZScsICdyZXF1aXJlZCcsIHtcbiAgICAgICAgY29va2llOiBjb25maWcuZ2V0KCdzaGllbGQuY29va2llTmFtZScpLFxuICAgICAgICBwYXNzd29yZDogY29uZmlnLmdldCgnc2hpZWxkLmVuY3J5cHRpb25LZXknKSxcbiAgICAgICAgdHRsOiBjb25maWcuZ2V0KCdzaGllbGQuc2Vzc2lvblRpbWVvdXQnKSxcbiAgICAgICAgcGF0aDogY29uZmlnLmdldCgnc2VydmVyLmJhc2VQYXRoJykgKyAnLycsXG4gICAgICAgIGNsZWFySW52YWxpZDogdHJ1ZSxcbiAgICAgICAga2VlcEFsaXZlOiB0cnVlLFxuICAgICAgICByZWRpcmVjdFRvOiBgJHtjb25maWcuZ2V0KCdzZXJ2ZXIuYmFzZVBhdGgnKX0vbG9naW5gLFxuICAgICAgICB2YWxpZGF0ZUZ1bmM6IHJvb3QoJ3NlcnZlci9saWIvdmFsaWRhdGUnKShzZXJ2ZXIpXG4gICAgICB9KTtcbiAgICB9KTtcblxuICAgIHJvb3QoJ3NlcnZlci9yb3V0ZXMvYXBpL3YxL2F1dGhlbnRpY2F0ZScpKHNlcnZlcik7XG4gICAgcm9vdCgnc2VydmVyL3JvdXRlcy92aWV3cy9sb2dpbicpKHNlcnZlciwgdGhpcyk7XG4gICAgcm9vdCgnc2VydmVyL3JvdXRlcy92aWV3cy9sb2dvdXQnKShzZXJ2ZXIsIHRoaXMpO1xuICB9XG59KTsiXX0=",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "/home/christian/Documents/ELK/kibana-4.4.1-linux-x64/installedPlugins/shield/index.js"
      ],
      "names": [],
      "mappings": ";;AAAA,IAAM,cAAc,GAAG,OAAO,CAAC,kBAAkB,CAAC,CAAC;AACnD,IAAM,IAAI,GAAG,OAAO,CAAC,aAAa,CAAC,CAAC,EAAE,CAAC,CAAC;;AAExC,MAAM,CAAC,OAAO,GAAG,UAAC,MAAM;SAAK,IAAI,MAAM,CAAC,MAAM,CAAC;AAC7C,QAAI,EAAE,QAAQ;AACd,WAAO,EAAE,CAAC,eAAe,CAAC;;AAE1B,UAAM,EAAA,gBAAC,GAAG,EAAE;AACV,aAAO,GAAG,CAAC,MAAM,CAAC;AAChB,eAAO,EAAE,GAAG,CAAC,OAAO,EAAE,WAAQ,CAAC,IAAI,CAAC;AACpC,kBAAU,EAAE,GAAG,CAAC,MAAM,EAAE,WAAQ,CAAC,KAAK,CAAC;AACvC,qBAAa,EAAE,GAAG,CAAC,MAAM,EAAE;AAC3B,sBAAc,EAAE,GAAG,CAAC,MAAM,EAAE,WAAQ,CAAC,EAAE,GAAG,EAAE,GAAG,IAAI,CAAC;OACrD,CAAC,WAAQ,EAAE,CAAA;KACb;;AAED,aAAS,EAAE;AACT,uBAAiB,EAAE,CAAC,oCAAoC,CAAC;AACzD,UAAI,EAAE,CAAC;AACL,UAAE,EAAE,OAAO;AACX,aAAK,EAAE,OAAO;AACd,YAAI,EAAE,4BAA4B;AAClC,cAAM,EAAE,IAAI;AACZ,gBAAQ,EAAE,MAAM,CAAC,QAAQ,CAAC,MAAM;OACjC,EAAE;AACD,UAAE,EAAE,QAAQ;AACZ,aAAK,EAAE,QAAQ;AACf,YAAI,EAAE,6BAA6B;AACnC,cAAM,EAAE,IAAI;AACZ,gBAAQ,EAAE,MAAM,CAAC,QAAQ,CAAC,MAAM;OACjC,CAAC;KACH;;AAED,QAAI,EAAA,cAAC,MAAM,EAAE,OAAO,EAAE;AACpB,UAAM,MAAM,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC;AAC/B,UAAI,MAAM,CAAC,GAAG,CAAC,sBAAsB,CAAC,IAAI,IAAI,EAAE,MAAM,IAAI,KAAK,CAAC,iDAAiD,CAAC,CAAC;AACnH,UAAI,MAAM,CAAC,GAAG,CAAC,gBAAgB,CAAC,IAAI,IAAI,IAAI,MAAM,CAAC,GAAG,CAAC,iBAAiB,CAAC,IAAI,IAAI,EAAE;AACjF,cAAM,IAAI,KAAK,CAAC,iFAAiF,CAAC,CAAC;OACpG;;AAED,YAAM,CAAC,QAAQ,CAAC,cAAc,EAAE,UAAC,KAAK,EAAK;AACzC,YAAI,KAAK,IAAI,IAAI,EAAE,MAAM,KAAK,CAAC;;AAE/B,cAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,SAAS,EAAE,QAAQ,EAAE,UAAU,EAAE;AACpD,gBAAM,EAAE,MAAM,CAAC,GAAG,CAAC,mBAAmB,CAAC;AACvC,kBAAQ,EAAE,MAAM,CAAC,GAAG,CAAC,sBAAsB,CAAC;AAC5C,aAAG,EAAE,MAAM,CAAC,GAAG,CAAC,uBAAuB,CAAC;AACxC,cAAI,EAAE,MAAM,CAAC,GAAG,CAAC,iBAAiB,CAAC,GAAG,GAAG;AACzC,sBAAY,EAAE,IAAI;AAClB,mBAAS,EAAE,IAAI;AACf,oBAAU,EAAK,MAAM,CAAC,GAAG,CAAC,iBAAiB,CAAC,WAAQ;AACpD,sBAAY,EAAE,IAAI,CAAC,qBAAqB,CAAC,CAAC,MAAM,CAAC;SAClD,CAAC,CAAC;OACJ,CAAC,CAAC;;AAEH,UAAI,CAAC,mCAAmC,CAAC,CAAC,MAAM,CAAC,CAAC;AAClD,UAAI,CAAC,2BAA2B,CAAC,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;AAChD,UAAI,CAAC,4BAA4B,CAAC,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;KAClD;GACF,CAAC;CAAA,CAAC",
      "file": "/home/christian/Documents/ELK/kibana-4.4.1-linux-x64/installedPlugins/shield/index.js",
      "sourcesContent": [
        "const hapiAuthCookie = require('hapi-auth-cookie');\nconst root = require('requirefrom')('');\n\nmodule.exports = (kibana) => new kibana.Plugin({\n  name: 'shield',\n  require: ['elasticsearch'],\n\n  config(Joi) {\n    return Joi.object({\n      enabled: Joi.boolean().default(true),\n      cookieName: Joi.string().default('sid'),\n      encryptionKey: Joi.string(),\n      sessionTimeout: Joi.number().default(30 * 60 * 1000)\n    }).default()\n  },\n\n  uiExports: {\n    chromeNavControls: ['plugins/shield/views/logout_button'],\n    apps: [{\n      id: 'login',\n      title: 'Login',\n      main: 'plugins/shield/views/login',\n      hidden: true,\n      autoload: kibana.autoload.styles\n    }, {\n      id: 'logout',\n      title: 'Logout',\n      main: 'plugins/shield/views/logout',\n      hidden: true,\n      autoload: kibana.autoload.styles\n    }]\n  },\n\n  init(server, options) {\n    const config = server.config();\n    if (config.get('shield.encryptionKey') == null) throw new Error('shield.encryptionKey is required in kibana.yml.');\n    if (config.get('server.ssl.key') == null || config.get('server.ssl.cert') == null) {\n      throw new Error('HTTPS is required. Please set server.ssl.key and server.ssl.cert in kibana.yml.');\n    }\n\n    server.register(hapiAuthCookie, (error) => {\n      if (error != null) throw error;\n\n      server.auth.strategy('session', 'cookie', 'required', {\n        cookie: config.get('shield.cookieName'),\n        password: config.get('shield.encryptionKey'),\n        ttl: config.get('shield.sessionTimeout'),\n        path: config.get('server.basePath') + '/',\n        clearInvalid: true,\n        keepAlive: true,\n        redirectTo: `${config.get('server.basePath')}/login`,\n        validateFunc: root('server/lib/validate')(server)\n      });\n    });\n\n    root('server/routes/api/v1/authenticate')(server);\n    root('server/routes/views/login')(server, this);\n    root('server/routes/views/logout')(server, this);\n  }\n});"
      ]
    },
    "mtime": 1452816873000
  }
}